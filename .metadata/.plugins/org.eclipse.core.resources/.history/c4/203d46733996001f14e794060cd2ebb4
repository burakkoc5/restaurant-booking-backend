package com.burakkoc.restaurantbooking.business.concretes;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.burakkoc.restaurantbooking.business.abstracts.BookingService;
import com.burakkoc.restaurantbooking.dataAccess.abstracts.BookingRepository;
import com.burakkoc.restaurantbooking.entities.Booking;

@Service
public class BookingManager implements BookingService {
    
    private final BookingRepository bookingRepository;

    @Autowired
    public BookingManager(BookingRepository bookingRepository) {
        this.bookingRepository = bookingRepository;
    }

    @Override
    public Booking getById(int id) {
        return bookingRepository.findById(id).orElse(null); // Handle not found scenario as needed
    }

    @Override
    public List<Booking> getAll() {
        return bookingRepository.findAll();
    }

    @Override
    public void add(Booking booking) {
        bookingRepository.save(booking);
    }

    @Override
    public void update(int id, Booking booking) {
        // Check if booking exists
        if (bookingRepository.existsById(id)) {
            booking.setId(id); // Set the existing ID to ensure it updates the correct record
            bookingRepository.save(booking);
        } else {
            throw new RuntimeException("Booking not found with id: " + id);
        }
    }

    @Override
    public void delete(int id) {
        bookingRepository.deleteById(id);
    }
    
    @Override
    public List<Booking> getAllBookingsByRestaurantId(int restaurantId) {
        return bookingRepository.findAllByRestaurantId(restaurantId);
    }

    @Override
    public List<Booking> getAllBookingsByUserId(int userId) {
        return bookingRepository.findAllByUserId(userId);
    }

}
